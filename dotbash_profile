##################################################
#
#   Colors
#
##################################################

export LS_COLORS="${LS_COLORS}:di=01;38;5;24:ex=00;38;5;106:ln=00;38;5;96"

##################################################
#
#   Bash Completion Scripts
#
##################################################

#   Homebrew install
if [ -f /usr/local/etc/bash_completion.d/git-completion.bash ]; then
    . /usr/local/etc/bash_completion.d/git-completion.bash
fi

##################################################
#
#   Command Prompt Customizations
#
##################################################

export CLICOLOR=1
export GREP_COLOR="1;36"
export THEME=gruvbox
color_prompt=yes

YELLOW=$(tput setaf 136);
ORANGE=$(tput setaf 166);
GREEN=$(tput setaf 64);
BLUE=$(tput setaf 33);
BASE2=$(tput setaf 254);
RESET=$(tput sgr0);

GRUV_YELLOW=$(tput setaf 172);
GRUV_ORANGE=$(tput setaf 166);
GRUV_GREEN=$(tput setaf 106);
GRUV_BLUE=$(tput setaf 66);

function prompt_char {
    if ! git rev-parse --git-dir > /dev/null 2>&1; then
        echo -e '\u03bb'
        return 0
    fi

    local GIT_BRANCH=$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')
    echo "($GIT_BRANCH) $"
}

if [[ $THEME == "solarized" ]]; then
  YELLOW=$(tput setaf 136);
  ORANGE=$(tput setaf 166);
  GREEN=$(tput setaf 64);
  BLUE=$(tput setaf 33);

  export PS1='\[$ORANGE\]\u\[$RESET\] @ \[$YELLOW\]\h\[$RESET\] in \[$GREEN\]\w\[$RESET\]\n$(prompt_char) '
elif [[ $THEME == "gruvbox" ]]; then
  YELLOW=$(tput setaf 172);
  ORANGE=$(tput setaf 166);
  GREEN=$(tput setaf 106);
  BLUE=$(tput setaf 66);

  export PS1='\[$ORANGE\]\u\[$RESET\] @ \[$YELLOW\]\h\[$RESET\] in \[$GREEN\]\w\[$RESET\]\n$(prompt_char) '
fi

##################################################
#
#   Python Virtual Environments & Completion
#
##################################################

export PYTHON_ENV_PATH=$HOME/env
export PIP_REQUIRE_VIRTUALENV=true

function activate () {
    command source $PYTHON_ENV_PATH/$1/bin/activate
}

function _envdir () {
    IFS='
    '

    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    opts=`ls $PYTHON_ENV_PATH`

    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    return 0
}
complete -F _envdir activate

##################################################
#
#   Go Stuffs
#
##################################################

export GOPATH=$HOME/Projects/go
export PATH=/opt/go/bin:$PATH
export PATH=$PATH:$(go env GOPATH)/bin

##################################################
#
#   Rust Stuffs
#
##################################################


##################################################
#
#   Node Stuffs
#
##################################################

export NVM_DIR="$HOME/.nvm"

if [ -f /usr/local/opt/nvm/nvm.sh ]; then
    . /usr/local/opt/nvm/nvm.sh
fi

##################################################
#
#   SSH stuffs
#
##################################################

export GPG_TTY=$(tty)
if [ -f "${HOME}/.gpg-agent-info" ]; then
  . "${HOME}/.gpg-agent-info"
  export GPG_AGENT_INFO
  export SSH_AUTH_SOCK
fi

function _ssh_hosts () {
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    opts="$(grep '^Host \{1\}[^*]' ~/.ssh/config | awk '{$1="";print}')"

    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    return 0
}
complete -F _ssh_hosts ssh

##################################################
#
#   Aliases, etc.
#
##################################################

alias grep="grep --color=auto"
export EDITOR=/usr/bin/vi
export PATH=~/bin:/opt/bin:~/bin/app-images:$PATH
. "$HOME/.cargo/env"
