export CLICOLOR=1
export GREP_COLOR="1;36"
export PYTHON_ENV_PATH=$HOME/env
export PIP_REQUIRE_VIRTUALENV=true
export POSTGRES_PATH=/Applications/Postgres.app/Contents/Versions/latest/bin
export ANT_HOME=$HOME"/projects/winston/build-support/apache-ant"
export PATH=/usr/local/bin:~/bin:$PATH:$POSTGRES_PATH
export EDITOR=/usr/bin/vi
export TERM=xterm-256color
color_prompt=yes

export SCRUM_DIR=~/Documents/scrum/
export CHROME_BIN=`which chromium-browser`

##################################################
#
#   Bash Completion Scripts
#
##################################################

#   Package install
if [ -f /usr/local/git/contrib/completion/git-completion.bash ]; then
    . /usr/local/git/contrib/completion/git-completion.bash
fi

#   Homebrew install
if [ -f /usr/local/etc/bash_completion.d/git-completion.bash ]; then
    . /usr/local/etc/bash_completion.d/git-completion.bash
fi

#   RabbitMQ admin
if [ -f /usr/local/etc/bash_completion.d/rabbitmqadmin.bash ]; then
    . /usr/local/etc/bash_completion.d/rabbitmqadmin.bash
fi

##################################################
#
#   Command Prompt Customizations
#
##################################################

YELLOW=$(tput setaf 136);
ORANGE=$(tput setaf 166);
GREEN=$(tput setaf 64);
BLUE=$(tput setaf 33);
BASE2=$(tput setaf 254);
RESET=$(tput sgr0);

function prompt_char {
    if ! git rev-parse --git-dir > /dev/null 2>&1; then
        echo '$'
        return 0
    fi

    local GIT_BRANCH=$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')
    echo "($GIT_BRANCH) $"
}
export PS1='\[$ORANGE\]\u\[$RESET\] @ \[$YELLOW\]\h\[$RESET\] in \[$GREEN\]\w\[$RESET\]\n\[$BASE2\]$(prompt_char)\[$RESET\] '

##################################################
#
#   Python Virtual Environments & Completion
#
##################################################

#export PYTHON_VIRTUALENV="${BLUE}[`basename \"$VIRTUAL_ENV\"`]${RESET} "
function activate () {
    command source $PYTHON_ENV_PATH/$1/bin/activate
}

function _envdir () {
    IFS='
    '

    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    opts=`ls $PYTHON_ENV_PATH`

    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    return 0
}
complete -F _envdir activate

##################################################
#
#   Ruby Stuffs
#
##################################################

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

##################################################
#
#   Scala/Play Stuffs
#
##################################################

export SCALA_HOME=/usr/local/bin/scala
export PLAY_PATH="/usr/local/play"
export PATH=$PATH:$PLAY_PATH

##################################################
#
#   Go Stuffs
#
##################################################

export GOPATH=$HOME/Projects/go
export PATH=$PATH:$(go env GOPATH)/bin

##################################################
#
#   Node Stuffs
#
##################################################

export NVM_DIR="$HOME/.nvm"

if [ -f /usr/local/opt/nvm/nvm.sh ]; then
    . /usr/local/opt/nvm/nvm.sh
fi

##################################################
#
#   SSH hosts autocomplete
#
##################################################

function _ssh_hosts () {
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    opts="$(grep '^Host \{1\}[^*]' ~/.ssh/config | awk '{$1="";print}')"

    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    return 0
}
complete -F _ssh_hosts ssh

##################################################
#
#   Aliases
#
##################################################

alias jsoncb="pbpaste | python -mjson.tool | gvim -"
alias grep="grep --color=auto"

export PATH="$HOME/.cargo/bin:$PATH"
export PATH="~/.npm-global/bin:$PATH"
